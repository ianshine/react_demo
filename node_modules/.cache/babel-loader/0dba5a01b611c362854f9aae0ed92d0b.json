{"ast":null,"code":"import _classCallCheck from \"/Users/lilei/Documents/react/reactDemo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lilei/Documents/react/reactDemo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lilei/Documents/react/reactDemo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lilei/Documents/react/reactDemo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lilei/Documents/react/reactDemo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lilei/Documents/react/reactDemo/src/ReduxTest/TodoList.js\";\nimport React, { Component } from 'react'; //第二步\n\nimport { connect } from 'react-redux';\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList() {\n    _classCallCheck(this, TodoList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TodoList).apply(this, arguments));\n  }\n\n  _createClass(TodoList, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.props.inputValue //使用store传的值\n        ,\n        onChange: this.props.changeInputValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.addItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"\\u63D0\\u4EA4\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, this.props.list.map(function (item, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            return _this.props.deleteItem(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, item);\n      })));\n    }\n  }]);\n\n  return TodoList;\n}(Component); //规定映射条件\n//store里的state映射到组件的props里\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    inputValue: state.inputValue,\n    //inputValue是指组件this.props.inputValue,state.inputValue是指store里的inputValue\n    list: state.list\n  };\n}; //把store.dispatch映射到组件的props上\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    //把这个函数映射到组件的props上\n    changeInputValue: function changeInputValue(e) {\n      var action = {\n        //1:创建action消息\n        type: 'change_input_value',\n        value: e.target.value //把输入框里的值传给store\n\n      };\n      dispatch(action); //2：把这个消息传给store处理\n    },\n    addItem: function addItem() {\n      var action = {\n        type: 'add_item'\n      };\n      dispatch(action);\n    },\n    deleteItem: function deleteItem(index) {\n      var action = {\n        type: 'delete_item',\n        index: index\n      };\n      dispatch(action);\n    }\n  };\n}; //目的：使TodoList和store做链接\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/Users/lilei/Documents/react/reactDemo/src/ReduxTest/TodoList.js"],"names":["React","Component","connect","TodoList","props","inputValue","changeInputValue","addItem","list","map","item","index","deleteItem","mapStateToProps","state","mapDispatchToProps","dispatch","e","action","type","value","target"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA+B,OAA/B,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAGMC,Q;;;;;;;;;;;;;6BACO;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,UADtB,CACiC;AADjC;AAEI,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,gBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI;AAAS,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKH,KAAL,CAAWI,IAAX,CAAgBC,GAAhB,CAAoB,UAACC,IAAD,EAAMC,KAAN,EAAc;AAC9B,eAAO;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,OAAO,EAAE;AAAA,mBAAI,KAAI,CAACP,KAAL,CAAWQ,UAAX,CAAsBD,KAAtB,CAAJ;AAAA,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4DD,IAA5D,CAAP;AACH,OAFD,CAFR,CANJ,CADJ;AAgBH;;;;EAlBmBT,S,GAqBxB;AACA;;;AACA,IAAMY,eAAe,GAAC,SAAhBA,eAAgB,CAACC,KAAD,EAAS;AAC3B,SAAO;AACHT,IAAAA,UAAU,EAACS,KAAK,CAACT,UADd;AACyB;AAC5BG,IAAAA,IAAI,EAACM,KAAK,CAACN;AAFR,GAAP;AAIH,CALD,C,CAOA;;;AACA,IAAMO,kBAAkB,GAAC,SAAnBA,kBAAmB,CAACC,QAAD,EAAY;AACnC,SAAO;AACH;AACAV,IAAAA,gBAFG,4BAEcW,CAFd,EAEgB;AACd,UAAMC,MAAM,GAAC;AAAC;AACVC,QAAAA,IAAI,EAAC,oBADI;AAETC,QAAAA,KAAK,EAACH,CAAC,CAACI,MAAF,CAASD,KAFN,CAEY;;AAFZ,OAAb;AAIAJ,MAAAA,QAAQ,CAACE,MAAD,CAAR,CALc,CAKG;AACrB,KARE;AASHX,IAAAA,OATG,qBASM;AACL,UAAOW,MAAM,GAAC;AACVC,QAAAA,IAAI,EAAC;AADK,OAAd;AAGAH,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACH,KAdE;AAeHN,IAAAA,UAfG,sBAeQD,KAfR,EAec;AACb,UAAMO,MAAM,GAAC;AACTC,QAAAA,IAAI,EAAC,aADI;AAETR,QAAAA,KAAK,EAACA;AAFG,OAAb;AAIAK,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACH;AArBE,GAAP;AAuBD,CAxBD,C,CA0BA;;;AACA,eAAehB,OAAO,CAACW,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CZ,QAA5C,CAAf","sourcesContent":["import React,{Component} from  'react';\n//第二步\nimport {connect} from 'react-redux';\n\n\nclass TodoList extends  Component{\n     render(){\n        return(\n            <div>\n                <input\n                    value={this.props.inputValue}//使用store传的值\n                    onChange={this.props.changeInputValue}\n                />\n                <button  onClick={this.props.addItem}>提交</button>\n                <ul>\n                    {\n                        this.props.list.map((item,index)=>{\n                            return <li key={index} onClick={()=>this.props.deleteItem(index)}>{item}</li>\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n\n}\n//规定映射条件\n//store里的state映射到组件的props里\nconst mapStateToProps=(state)=>{\n    return {\n        inputValue:state.inputValue,//inputValue是指组件this.props.inputValue,state.inputValue是指store里的inputValue\n        list:state.list,\n    }\n};\n\n//把store.dispatch映射到组件的props上\nconst mapDispatchToProps=(dispatch)=>{\n  return {\n      //把这个函数映射到组件的props上\n      changeInputValue(e){\n           const action={//1:创建action消息\n               type:'change_input_value',\n               value:e.target.value,//把输入框里的值传给store\n           };\n           dispatch(action);//2：把这个消息传给store处理\n      },\n      addItem(){\n          const  action={\n              type:'add_item',\n          };\n          dispatch(action);\n      },\n      deleteItem(index){\n          const action={\n              type:'delete_item',\n              index:index,\n          };\n          dispatch(action);\n      }\n  }\n};\n\n//目的：使TodoList和store做链接\nexport default connect(mapStateToProps,mapDispatchToProps)(TodoList);\n\n"]},"metadata":{},"sourceType":"module"}