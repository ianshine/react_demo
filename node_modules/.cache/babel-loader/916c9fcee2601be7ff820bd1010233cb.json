{"ast":null,"code":"// import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n// import { createStore } from 'redux';\n// import { Provider, connect } from 'react-redux';\n// //定义组件\n// class ReduxCode extends Component{\n//     render() {\n//         const {text, onChangeText, onButtonClick} = this.props;\n//         return (\n//             <div>\n//                 <h1 onClick={onChangeText}> {text} </h1>\n//                 <button onClick={onButtonClick}>click me</button>\n//             </div>\n//         );\n//     }\n// }\n// //action\n// const changeTextAction = {\n//         type:'CHANGE_TEXT'\n// }\n// const buttonClickAction = {\n//         type:'BUTTON_CLICK'\n// }\n// //reducer\n// const initialState = {\n//     text: 'Hello'\n// }\n// const reducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'CHANGE_TEXT':\n//             return {\n//                 text: state.text=='Hello' ? 'world':'Hello'\n//             }\n//         case 'BUTTON_CLICK':\n//             return {\n//                 text: 'Hello world'\n//             }\n//         default:\n//             return initialState;\n//     }\n// }\n// //store\n// let store = createStore(reducer);\n// //映射Redux state到组件的属性\n// function mapStateToProps(state) {\n//     return { text: state.text }\n// }\n// //映射Redux actions到组件的属性\n// function mapDispatchToProps(dispatch){\n//     return{\n//         onButtonClick:()=>dispatch(buttonClickAction),\n//         onChangeText:()=>dispatch(changeTextAction)\n//     }\n// }\n// //连接组件\n// ReduxCode = connect(mapStateToProps, mapDispatchToProps)(ReduxCode)\n// //渲染组件\n// ReactDOM.render(\n//     <Provider store={store}>\n//         <ReduxCode />\n//     </Provider>,\n//     document.getElementById('root')\n// )\n// export default ReduxCode;","map":{"version":3,"sources":["/Users/lilei/Documents/react/reactDemo/src/Function/ReduxCode.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n// import { createStore } from 'redux';\n// import { Provider, connect } from 'react-redux';\n\n \n \n// //定义组件\n// class ReduxCode extends Component{\n//     render() {\n//         const {text, onChangeText, onButtonClick} = this.props;\n//         return (\n//             <div>\n//                 <h1 onClick={onChangeText}> {text} </h1>\n//                 <button onClick={onButtonClick}>click me</button>\n//             </div>\n//         );\n//     }\n// }\n \n \n// //action\n// const changeTextAction = {\n//         type:'CHANGE_TEXT'\n// }\n// const buttonClickAction = {\n//         type:'BUTTON_CLICK'\n// }\n \n \n// //reducer\n// const initialState = {\n//     text: 'Hello'\n// }\n// const reducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'CHANGE_TEXT':\n//             return {\n//                 text: state.text=='Hello' ? 'world':'Hello'\n//             }\n//         case 'BUTTON_CLICK':\n//             return {\n//                 text: 'Hello world'\n//             }\n//         default:\n//             return initialState;\n//     }\n// }\n \n// //store\n// let store = createStore(reducer);\n \n// //映射Redux state到组件的属性\n// function mapStateToProps(state) {\n//     return { text: state.text }\n// }\n \n// //映射Redux actions到组件的属性\n// function mapDispatchToProps(dispatch){\n//     return{\n//         onButtonClick:()=>dispatch(buttonClickAction),\n//         onChangeText:()=>dispatch(changeTextAction)\n//     }\n// }\n \n// //连接组件\n// ReduxCode = connect(mapStateToProps, mapDispatchToProps)(ReduxCode)\n \n// //渲染组件\n// ReactDOM.render(\n//     <Provider store={store}>\n//         <ReduxCode />\n//     </Provider>,\n//     document.getElementById('root')\n// )\n\n// export default ReduxCode;\n"]},"metadata":{},"sourceType":"module"}